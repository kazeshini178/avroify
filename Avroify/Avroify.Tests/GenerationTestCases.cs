using System.Collections;
using System.Collections.Generic;
using Avroify.Internals;
using Microsoft.CodeAnalysis;

namespace Avroify.Tests;

public class GenerationTestCase
{
    public string ClassDefinition { get; init; } = null!;
    public string GenerationResult { get; init; } = null!;
}

public class GenerationTestCases : IEnumerable<object[]>
{
    private readonly List<object[]> _testCases =
    [
        [
            new GenerationTestCase()
            {
                ClassDefinition = """
                                  using Avroify;
                                  using System.Collections.Generic;

                                  namespace Avroify.Sample
                                  {
                                      using Enums;
                                  
                                      [Avroify]
                                      public partial class SampleAvroModel
                                      {
                                          public string Name { get; set; }
                                          public FontSizeEnum FontSize { get; set; } = FontSize.Large;
                                          public BasicModel Basic { get; set; }
                                          public DateTime DateCreated { get; set; }
                                          public List<BasicModel> BasicList { get; set; }
                                  
                                          public List<string> Colours { get; set; }
                                          public int Age { get; set; } = 18;
                                          public int? Money { get; set; }
                                      }
                                  
                                      public class BasicModel
                                      {
                                          public int Id { get; set; }
                                          public string Avroname { get; set; } = "Bob"
                                          public bool IsDeleted { get; set; }
                                      }
                                  }

                                  namespace Avroify.Sample.Enums
                                  {
                                      public enum FontSizeEnum
                                      {
                                          Small,
                                          Medium,
                                          Large
                                      }
                                  }
                                  """,
                GenerationResult = $$$$"""
                                       // ------------------------------------------------------------------------------
                                       // <auto-generated>
                                       //    Generated by Avroify
                                       //    Changes to this file will be lost when code is regenerated
                                       // </auto-generated>
                                       // ------------------------------------------------------------------------------

                                       using System;
                                       using System.Collections.Generic;
                                       using System.Text;
                                       using global::Avro;
                                       using global::Avro.Specific;

                                       namespace Avroify.Sample;

                                       [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Avroify", "{{{{Constants.Version}}}}")]
                                       public partial class SampleAvroModel : global::Avro.Specific.ISpecificRecord
                                       {
                                       	public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"SampleAvroModel\",\"namespace\":\"Avroify.Sample\",\"fields\":[{\"name\":\"Name\",\"type\":\"string\"},{\"name\":\"FontSize\",\"default\":\"Large\",\"type\":{\"type\":\"enum\",\"name\":\"FontSizeEnum\",\"namespace\":\"Avroify.Sample.Enums\",\"symbols\":[\"Small\",\"Medium\",\"Large\"]}},{\"name\":\"Basic\",\"type\":{\"type\":\"record\",\"name\":\"BasicModel\",\"namespace\":\"Avroify.Sample\",\"fields\":[{\"name\":\"Id\",\"type\":\"int\"},{\"name\":\"Avroname\",\"default\":\"Bob\",\"type\":\"string\"},{\"name\":\"IsDeleted\",\"type\":\"boolean\"}]}},{\"name\":\"DateCreated\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"BasicList\",\"type\":{\"type\":\"array\",\"items\":\"BasicModel\"}},{\"name\":\"Colours\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"Age\",\"default\":\"18\",\"type\":\"int\"},{\"name\":\"Money\",\"type\":[\"null\",\"int\"]}]}");
                                           public virtual global::Avro.Schema Schema
                                       	{
                                       		get
                                       		{
                                       			return SampleAvroModel._SCHEMA;
                                       		}
                                       	}
                                       
                                           private AvroDecimal ToScaledAvroDecimal(decimal value, int targetScale = 14)
                                           {
                                               var result = Math.Round(value * (decimal)Math.Pow(10, targetScale), targetScale);
                                               return new AvroDecimal(new System.Numerics.BigInteger(result), targetScale);
                                           }
                                       
                                           public virtual object Get(int fieldPos)
                                       	{
                                       		switch (fieldPos)
                                       		{
                                       			case 0: return this.Name;
                                       			case 1: return this.FontSize;
                                       			case 2: return this.Basic;
                                       			case 3: return this.DateCreated;
                                       			case 4: return this.BasicList;
                                       			case 5: return this.Colours;
                                       			case 6: return this.Age;
                                       			case 7: return this.Money;
                                       
                                       			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
                                       		}
                                       	}
                                       
                                       	public virtual void Put(int fieldPos, object fieldValue)
                                       	{
                                       		switch (fieldPos)
                                       		{
                                       			case 0: this.Name = (string)fieldValue; break;
                                       			case 1: this.FontSize = (Avroify.Sample.Enums.FontSizeEnum)fieldValue; break;
                                       			case 2: this.Basic = (Avroify.Sample.BasicModel)fieldValue; break;
                                       			case 3: this.DateCreated = (DateTime)fieldValue; break;
                                       			case 4: this.BasicList = (System.Collections.Generic.List<Avroify.Sample.BasicModel>)fieldValue; break;
                                       			case 5: this.Colours = (System.Collections.Generic.List<string>)fieldValue; break;
                                       			case 6: this.Age = (int)fieldValue; break;
                                       			case 7: this.Money = (int?)fieldValue; break;
                                       
                                       			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
                                       		}
                                       	}
                                       }

                                       """
            }
        ],
        [
            new GenerationTestCase()
            {
                ClassDefinition = """
                                  using Avroify;
                                  using System.Collections.Generic;

                                  namespace Avroify.Sample
                                  {
                                   using Enums;
                                  
                                      [Avroify(Name = "TestModel", Namespace = "Avroify.Testing")]
                                      public partial class SampleAvroModel
                                      {
                                          public string Name { get; set; }
                                          public DateTime DateCreated { get; set; }
                                          public int Age { get; set; } = 18;
                                          public int? Money { get; set; }
                                      } 
                                  }
                                  """,
                GenerationResult = $$$$"""
                                       // ------------------------------------------------------------------------------
                                       // <auto-generated>
                                       //    Generated by Avroify
                                       //    Changes to this file will be lost when code is regenerated
                                       // </auto-generated>
                                       // ------------------------------------------------------------------------------

                                       using System;
                                       using System.Collections.Generic;
                                       using System.Text;
                                       using global::Avro;
                                       using global::Avro.Specific;

                                       namespace Avroify.Sample;

                                       [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Avroify", "{{{{Constants.Version}}}}")]
                                       public partial class SampleAvroModel : global::Avro.Specific.ISpecificRecord
                                       {
                                           public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"TestModel\",\"namespace\":\"Avroify.Testing\",\"fields\":[{\"name\":\"Name\",\"type\":\"string\"},{\"name\":\"DateCreated\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"Age\",\"default\":\"18\",\"type\":\"int\"},{\"name\":\"Money\",\"type\":[\"null\",\"int\"]}]}");
                                           public virtual global::Avro.Schema Schema
                                           {
                                               get
                                               {
                                                   return SampleAvroModel._SCHEMA;
                                               }
                                           }
                                       
                                           private AvroDecimal ToScaledAvroDecimal(decimal value, int targetScale = 14)
                                           {
                                               var result = Math.Round(value * (decimal)Math.Pow(10, targetScale), targetScale);
                                               return new AvroDecimal(new System.Numerics.BigInteger(result), targetScale);
                                           }
                                       
                                           public virtual object Get(int fieldPos)
                                           {
                                               switch (fieldPos)
                                               {
                                                   case 0: return this.Name;
                                                   case 1: return this.DateCreated;
                                                   case 2: return this.Age;
                                                   case 3: return this.Money;
                                       
                                                   default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
                                               }
                                           }
                                       
                                           public virtual void Put(int fieldPos, object fieldValue)
                                           {
                                               switch (fieldPos)
                                               {
                                                   case 0: this.Name = (string)fieldValue; break;
                                                   case 1: this.DateCreated = (DateTime)fieldValue; break;
                                                   case 2: this.Age = (int)fieldValue; break;
                                                   case 3: this.Money = (int?)fieldValue; break;
                                       
                                                   default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
                                               }
                                           }
                                       }

                                       """
            }
        ],
        [
            new GenerationTestCase()
            {
                ClassDefinition = """
                                  using Avroify;
                                  using System.Collections.Generic;

                                  namespace Avroify.Sample
                                  {
                                   using Enums;
                                  
                                      [Avroify(Name = "TestModel")]
                                      public partial class SampleAvroModel
                                      {
                                          public string Name { get; set; }
                                          public DateTime DateCreated { get; set; }
                                          public int Age { get; set; } = 18;
                                          public int? Money { get; set; }
                                      } 
                                  }
                                  """,
                GenerationResult = $$$$"""
                                       // ------------------------------------------------------------------------------
                                       // <auto-generated>
                                       //    Generated by Avroify
                                       //    Changes to this file will be lost when code is regenerated
                                       // </auto-generated>
                                       // ------------------------------------------------------------------------------

                                       using System;
                                       using System.Collections.Generic;
                                       using System.Text;
                                       using global::Avro;
                                       using global::Avro.Specific;

                                       namespace Avroify.Sample;

                                       [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Avroify", "{{{{Constants.Version}}}}")]
                                       public partial class SampleAvroModel : global::Avro.Specific.ISpecificRecord
                                       {
                                           public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"TestModel\",\"namespace\":\"Avroify.Sample\",\"fields\":[{\"name\":\"Name\",\"type\":\"string\"},{\"name\":\"DateCreated\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"Age\",\"default\":\"18\",\"type\":\"int\"},{\"name\":\"Money\",\"type\":[\"null\",\"int\"]}]}");
                                           public virtual global::Avro.Schema Schema
                                           {
                                               get
                                               {
                                                   return SampleAvroModel._SCHEMA;
                                               }
                                           }
                                       
                                           private AvroDecimal ToScaledAvroDecimal(decimal value, int targetScale = 14)
                                           {
                                               var result = Math.Round(value * (decimal)Math.Pow(10, targetScale), targetScale);
                                               return new AvroDecimal(new System.Numerics.BigInteger(result), targetScale);
                                           }
                                       
                                           public virtual object Get(int fieldPos)
                                           {
                                               switch (fieldPos)
                                               {
                                                   case 0: return this.Name;
                                                   case 1: return this.DateCreated;
                                                   case 2: return this.Age;
                                                   case 3: return this.Money;
                                       
                                                   default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
                                               }
                                           }
                                       
                                           public virtual void Put(int fieldPos, object fieldValue)
                                           {
                                               switch (fieldPos)
                                               {
                                                   case 0: this.Name = (string)fieldValue; break;
                                                   case 1: this.DateCreated = (DateTime)fieldValue; break;
                                                   case 2: this.Age = (int)fieldValue; break;
                                                   case 3: this.Money = (int?)fieldValue; break;
                                       
                                                   default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
                                               }
                                           }
                                       }

                                       """
            }
        ],
        [
            new GenerationTestCase()
            {
                ClassDefinition = """
                                  using Avroify;
                                  using System.Collections.Generic;

                                  namespace Avroify.Sample
                                  {
                                   using Enums;
                                  
                                      [Avroify(Namespace = "Avroify.Testing")]
                                      public partial class SampleAvroModel
                                      {
                                          public string Name { get; set; }
                                          public DateTime DateCreated { get; set; }
                                          public int Age { get; set; } = 18;
                                          public int? Money { get; set; }
                                      } 
                                  }
                                  """,
                GenerationResult = $$$$"""
                                       // ------------------------------------------------------------------------------
                                       // <auto-generated>
                                       //    Generated by Avroify
                                       //    Changes to this file will be lost when code is regenerated
                                       // </auto-generated>
                                       // ------------------------------------------------------------------------------

                                       using System;
                                       using System.Collections.Generic;
                                       using System.Text;
                                       using global::Avro;
                                       using global::Avro.Specific;

                                       namespace Avroify.Sample;

                                       [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Avroify", "{{{{Constants.Version}}}}")]
                                       public partial class SampleAvroModel : global::Avro.Specific.ISpecificRecord
                                       {
                                           public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"SampleAvroModel\",\"namespace\":\"Avroify.Testing\",\"fields\":[{\"name\":\"Name\",\"type\":\"string\"},{\"name\":\"DateCreated\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"Age\",\"default\":\"18\",\"type\":\"int\"},{\"name\":\"Money\",\"type\":[\"null\",\"int\"]}]}");
                                           public virtual global::Avro.Schema Schema
                                           {
                                               get
                                               {
                                                   return SampleAvroModel._SCHEMA;
                                               }
                                           }
                                       
                                           private AvroDecimal ToScaledAvroDecimal(decimal value, int targetScale = 14)
                                           {
                                               var result = Math.Round(value * (decimal)Math.Pow(10, targetScale), targetScale);
                                               return new AvroDecimal(new System.Numerics.BigInteger(result), targetScale);
                                           }
                                       
                                           public virtual object Get(int fieldPos)
                                           {
                                               switch (fieldPos)
                                               {
                                                   case 0: return this.Name;
                                                   case 1: return this.DateCreated;
                                                   case 2: return this.Age;
                                                   case 3: return this.Money;
                                       
                                                   default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
                                               }
                                           }
                                       
                                           public virtual void Put(int fieldPos, object fieldValue)
                                           {
                                               switch (fieldPos)
                                               {
                                                   case 0: this.Name = (string)fieldValue; break;
                                                   case 1: this.DateCreated = (DateTime)fieldValue; break;
                                                   case 2: this.Age = (int)fieldValue; break;
                                                   case 3: this.Money = (int?)fieldValue; break;
                                       
                                                   default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
                                               }
                                           }
                                       }

                                       """
            }
        ]
    ];

    public IEnumerator<object[]> GetEnumerator() => _testCases.GetEnumerator();

    IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();
}

// TODO: Create a TestCases for NullableContext Enabled and Disabled

public class NullReferenceTypeTestCases : IEnumerable<object[]>
{
    private readonly List<object[]> _testCases =
    [
        // Compiler Null Check off, reference types null by default
        [
            NullableContextOptions.Disable,
            new GenerationTestCase()
            {
                ClassDefinition = """
                                  using Avroify;
                                  using System.Collections.Generic;

                                  namespace Avroify.Sample;

                                  [Avroify]
                                  public partial class SampleAvroModel
                                  {
                                      public string Name { get; set; }
                                      public List<string> List { get; set; }
                                      public Dictionary<string, Model> Dictionary { get; set; }
                                      public Model ModelClass { get; set; }
                                  }

                                  [Avroify]
                                  public partial class Model
                                  {
                                       public string? SubProp { get; set; }
                                  }
                                  """,
                GenerationResult = $$$"""
                                      // ------------------------------------------------------------------------------
                                      // <auto-generated>
                                      //    Generated by Avroify
                                      //    Changes to this file will be lost when code is regenerated
                                      // </auto-generated>
                                      // ------------------------------------------------------------------------------

                                      using System;
                                      using System.Collections.Generic;
                                      using System.Text;
                                      using global::Avro;
                                      using global::Avro.Specific;

                                      namespace Avroify.Sample;

                                      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Avroify", "{{{Constants.Version}}}")]
                                      public partial class SampleAvroModel : global::Avro.Specific.ISpecificRecord
                                      {
                                          public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"SampleAvroModel\",\"namespace\":\"Avroify.Sample\",\"fields\":[{\"name\":\"Name\",\"type\":[\"null\",\"string\"]},{\"name\":\"List\",\"type\":[\"null\",{\"type\":\"array\",\"items\":[\"null\",\"string\"]}]},{\"name\":\"Dictionary\",\"type\":[\"null\",{\"type\":\"map\",\"values\":[\"null\",{\"type\":\"record\",\"name\":\"Model\",\"namespace\":\"Avroify.Sample\",\"fields\":[{\"name\":\"SubProp\",\"type\":[\"null\",\"string\"]}]}]}]},{\"name\":\"ModelClass\",\"type\":[\"null\",\"Model\"]}]}");
                                          public virtual global::Avro.Schema Schema
                                          {
                                              get
                                              {
                                                  return SampleAvroModel._SCHEMA;
                                              }
                                          }
                                      
                                          private AvroDecimal ToScaledAvroDecimal(decimal value, int targetScale = 14)
                                          {
                                              var result = Math.Round(value * (decimal)Math.Pow(10, targetScale), targetScale);
                                              return new AvroDecimal(new System.Numerics.BigInteger(result), targetScale);
                                          }
                                      
                                          public virtual object Get(int fieldPos)
                                          {
                                              switch (fieldPos)
                                              {
                                                  case 0: return this.Name;
                                                  case 1: return this.List;
                                                  case 2: return this.Dictionary;
                                                  case 3: return this.ModelClass;
                                      
                                                  default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
                                              }
                                          }
                                      
                                          public virtual void Put(int fieldPos, object fieldValue)
                                          {
                                              switch (fieldPos)
                                              {
                                                  case 0: this.Name = (string)fieldValue; break;
                                                  case 1: this.List = (System.Collections.Generic.List<string>)fieldValue; break;
                                                  case 2: this.Dictionary = (System.Collections.Generic.Dictionary<string, Avroify.Sample.Model>)fieldValue; break;
                                                  case 3: this.ModelClass = (Avroify.Sample.Model)fieldValue; break;
                                      
                                                  default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
                                              }
                                          }
                                      }

                                      """
            }
        ],
        [
            // Compiler Null Check off, reference types null by default, but still explicitly marked as nullable
            NullableContextOptions.Disable,
            new GenerationTestCase()
            {
                ClassDefinition = """
                                  using Avroify;
                                  using System.Collections.Generic;

                                  namespace Avroify.Sample;

                                  [Avroify]
                                  public partial class SampleAvroModel
                                  {
                                      public string? Name { get; set; }
                                      public List<string>? List { get; set; }
                                      public Dictionary<string, Model>? Dictionary { get; set; }
                                      public Model? ModelClass { get; set; }
                                  }

                                  [Avroify]
                                  public partial class Model
                                  {
                                       public string? SubProp { get; set; }
                                  }
                                  """,
                GenerationResult = $$$"""
                                      // ------------------------------------------------------------------------------
                                      // <auto-generated>
                                      //    Generated by Avroify
                                      //    Changes to this file will be lost when code is regenerated
                                      // </auto-generated>
                                      // ------------------------------------------------------------------------------

                                      using System;
                                      using System.Collections.Generic;
                                      using System.Text;
                                      using global::Avro;
                                      using global::Avro.Specific;

                                      namespace Avroify.Sample;

                                      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Avroify", "{{{Constants.Version}}}")]
                                      public partial class SampleAvroModel : global::Avro.Specific.ISpecificRecord
                                      {
                                          public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"SampleAvroModel\",\"namespace\":\"Avroify.Sample\",\"fields\":[{\"name\":\"Name\",\"type\":[\"null\",\"string\"]},{\"name\":\"List\",\"type\":[\"null\",{\"type\":\"array\",\"items\":[\"null\",\"string\"]}]},{\"name\":\"Dictionary\",\"type\":[\"null\",{\"type\":\"map\",\"values\":[\"null\",{\"type\":\"record\",\"name\":\"Model\",\"namespace\":\"Avroify.Sample\",\"fields\":[{\"name\":\"SubProp\",\"type\":[\"null\",\"string\"]}]}]}]},{\"name\":\"ModelClass\",\"type\":[\"null\",\"Model\"]}]}");
                                          public virtual global::Avro.Schema Schema
                                          {
                                              get
                                              {
                                                  return SampleAvroModel._SCHEMA;
                                              }
                                          }
                                      
                                          private AvroDecimal ToScaledAvroDecimal(decimal value, int targetScale = 14)
                                          {
                                              var result = Math.Round(value * (decimal)Math.Pow(10, targetScale), targetScale);
                                              return new AvroDecimal(new System.Numerics.BigInteger(result), targetScale);
                                          }
                                      
                                          public virtual object Get(int fieldPos)
                                          {
                                              switch (fieldPos)
                                              {
                                                  case 0: return this.Name;
                                                  case 1: return this.List;
                                                  case 2: return this.Dictionary;
                                                  case 3: return this.ModelClass;
                                      
                                                  default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
                                              }
                                          }
                                      
                                          public virtual void Put(int fieldPos, object fieldValue)
                                          {
                                              switch (fieldPos)
                                              {
                                                  case 0: this.Name = (string?)fieldValue; break;
                                                  case 1: this.List = (System.Collections.Generic.List<string>?)fieldValue; break;
                                                  case 2: this.Dictionary = (System.Collections.Generic.Dictionary<string, Avroify.Sample.Model>?)fieldValue; break;
                                                  case 3: this.ModelClass = (Avroify.Sample.Model?)fieldValue; break;
                                      
                                                  default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
                                              }
                                          }
                                      }

                                      """
            }
        ],
        [
            // Compiler Null Check On, reference types are not null by default
            NullableContextOptions.Enable,
            new GenerationTestCase()
            {
                ClassDefinition = """
                                  using Avroify;
                                  using System.Collections.Generic;

                                  namespace Avroify.Sample;

                                  [Avroify]
                                  public partial class SampleAvroModel
                                  {
                                      public string Name { get; set; }
                                      public List<string> List { get; set; }
                                      public Dictionary<string, Model> Dictionary { get; set; }
                                      public Model ModelClass { get; set; }
                                  }

                                  [Avroify]
                                  public partial class Model
                                  {
                                       public string? SubProp { get; set; }
                                  }
                                  """,
                GenerationResult = $$$$$"""
                                      // ------------------------------------------------------------------------------
                                      // <auto-generated>
                                      //    Generated by Avroify
                                      //    Changes to this file will be lost when code is regenerated
                                      // </auto-generated>
                                      // ------------------------------------------------------------------------------

                                      using System;
                                      using System.Collections.Generic;
                                      using System.Text;
                                      using global::Avro;
                                      using global::Avro.Specific;

                                      namespace Avroify.Sample;

                                      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Avroify", "{{{{{Constants.Version}}}}}")]
                                      public partial class SampleAvroModel : global::Avro.Specific.ISpecificRecord
                                      {
                                          public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"SampleAvroModel\",\"namespace\":\"Avroify.Sample\",\"fields\":[{\"name\":\"Name\",\"type\":\"string\"},{\"name\":\"List\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"Dictionary\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"Model\",\"namespace\":\"Avroify.Sample\",\"fields\":[{\"name\":\"SubProp\",\"type\":[\"null\",\"string\"]}]}}},{\"name\":\"ModelClass\",\"type\":\"Model\"}]}");
                                          public virtual global::Avro.Schema Schema
                                          {
                                              get
                                              {
                                                  return SampleAvroModel._SCHEMA;
                                              }
                                          }
                                      
                                          private AvroDecimal ToScaledAvroDecimal(decimal value, int targetScale = 14)
                                          {
                                              var result = Math.Round(value * (decimal)Math.Pow(10, targetScale), targetScale);
                                              return new AvroDecimal(new System.Numerics.BigInteger(result), targetScale);
                                          }
                                      
                                          public virtual object Get(int fieldPos)
                                          {
                                              switch (fieldPos)
                                              {
                                                  case 0: return this.Name;
                                                  case 1: return this.List;
                                                  case 2: return this.Dictionary;
                                                  case 3: return this.ModelClass;
                                      
                                                  default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
                                              }
                                          }
                                      
                                          public virtual void Put(int fieldPos, object fieldValue)
                                          {
                                              switch (fieldPos)
                                              {
                                                  case 0: this.Name = (string)fieldValue; break;
                                                  case 1: this.List = (System.Collections.Generic.List<string>)fieldValue; break;
                                                  case 2: this.Dictionary = (System.Collections.Generic.Dictionary<string, Avroify.Sample.Model>)fieldValue; break;
                                                  case 3: this.ModelClass = (Avroify.Sample.Model)fieldValue; break;
                                      
                                                  default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
                                              }
                                          }
                                      }

                                      """
            }
        ],
        [
            // Compiler Null Check on, reference types not null by default, but still explicitly marked as nullable
            NullableContextOptions.Enable,
            new GenerationTestCase()
            {
                ClassDefinition = """
                                  using Avroify;
                                  using System.Collections.Generic;

                                  namespace Avroify.Sample;

                                  [Avroify]
                                  public partial class SampleAvroModel
                                  {
                                      public string? Name { get; set; }
                                      public List<string>? List { get; set; }
                                      public Dictionary<string, Model>? Dictionary { get; set; }
                                      public Model? ModelClass { get; set; }
                                  }

                                  [Avroify]
                                  public partial class Model
                                  {
                                       public string? SubProp { get; set; }
                                  }
                                  """,
                GenerationResult = $$$"""
                                      // ------------------------------------------------------------------------------
                                      // <auto-generated>
                                      //    Generated by Avroify
                                      //    Changes to this file will be lost when code is regenerated
                                      // </auto-generated>
                                      // ------------------------------------------------------------------------------

                                      using System;
                                      using System.Collections.Generic;
                                      using System.Text;
                                      using global::Avro;
                                      using global::Avro.Specific;

                                      namespace Avroify.Sample;

                                      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Avroify", "{{{Constants.Version}}}")]
                                      public partial class SampleAvroModel : global::Avro.Specific.ISpecificRecord
                                      {
                                          public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"SampleAvroModel\",\"namespace\":\"Avroify.Sample\",\"fields\":[{\"name\":\"Name\",\"type\":[\"null\",\"string\"]},{\"name\":\"List\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"Dictionary\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"Model\",\"namespace\":\"Avroify.Sample\",\"fields\":[{\"name\":\"SubProp\",\"type\":[\"null\",\"string\"]}]}}]},{\"name\":\"ModelClass\",\"type\":[\"null\",\"Model\"]}]}");
                                          public virtual global::Avro.Schema Schema
                                          {
                                              get
                                              {
                                                  return SampleAvroModel._SCHEMA;
                                              }
                                          }
                                      
                                          private AvroDecimal ToScaledAvroDecimal(decimal value, int targetScale = 14)
                                          {
                                              var result = Math.Round(value * (decimal)Math.Pow(10, targetScale), targetScale);
                                              return new AvroDecimal(new System.Numerics.BigInteger(result), targetScale);
                                          }
                                      
                                          public virtual object Get(int fieldPos)
                                          {
                                              switch (fieldPos)
                                              {
                                                  case 0: return this.Name;
                                                  case 1: return this.List;
                                                  case 2: return this.Dictionary;
                                                  case 3: return this.ModelClass;
                                      
                                                  default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
                                              }
                                          }
                                      
                                          public virtual void Put(int fieldPos, object fieldValue)
                                          {
                                              switch (fieldPos)
                                              {
                                                  case 0: this.Name = (string?)fieldValue; break;
                                                  case 1: this.List = (System.Collections.Generic.List<string>?)fieldValue; break;
                                                  case 2: this.Dictionary = (System.Collections.Generic.Dictionary<string, Avroify.Sample.Model>?)fieldValue; break;
                                                  case 3: this.ModelClass = (Avroify.Sample.Model?)fieldValue; break;
                                      
                                                  default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
                                              }
                                          }
                                      }

                                      """
            }
        ],
        [
            // Compiler Null Check on, reference types not null by default, but everything explicitly marked as nullable
            NullableContextOptions.Enable,
            new GenerationTestCase()
            {
                ClassDefinition = """
                                  using Avroify;
                                  using System.Collections.Generic;

                                  namespace Avroify.Sample;

                                  [Avroify]
                                  public partial class SampleAvroModel
                                  {
                                      public string? Name { get; set; }
                                      public List<string?>? List { get; set; }
                                      public Dictionary<string, Model?>? Dictionary { get; set; }
                                      public Model? ModelClass { get; set; }
                                  }

                                  [Avroify]
                                  public partial class Model
                                  {
                                       public string? SubProp { get; set; }
                                  }
                                  """,
                GenerationResult = $$$"""
                                      // ------------------------------------------------------------------------------
                                      // <auto-generated>
                                      //    Generated by Avroify
                                      //    Changes to this file will be lost when code is regenerated
                                      // </auto-generated>
                                      // ------------------------------------------------------------------------------

                                      using System;
                                      using System.Collections.Generic;
                                      using System.Text;
                                      using global::Avro;
                                      using global::Avro.Specific;

                                      namespace Avroify.Sample;

                                      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Avroify", "{{{Constants.Version}}}")]
                                      public partial class SampleAvroModel : global::Avro.Specific.ISpecificRecord
                                      {
                                          public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"SampleAvroModel\",\"namespace\":\"Avroify.Sample\",\"fields\":[{\"name\":\"Name\",\"type\":[\"null\",\"string\"]},{\"name\":\"List\",\"type\":[\"null\",{\"type\":\"array\",\"items\":[\"null\",\"string\"]}]},{\"name\":\"Dictionary\",\"type\":[\"null\",{\"type\":\"map\",\"values\":[\"null\",{\"type\":\"record\",\"name\":\"Model\",\"namespace\":\"Avroify.Sample\",\"fields\":[{\"name\":\"SubProp\",\"type\":[\"null\",\"string\"]}]}]}]},{\"name\":\"ModelClass\",\"type\":[\"null\",\"Model\"]}]}");
                                          public virtual global::Avro.Schema Schema
                                          {
                                              get
                                              {
                                                  return SampleAvroModel._SCHEMA;
                                              }
                                          }
                                      
                                          private AvroDecimal ToScaledAvroDecimal(decimal value, int targetScale = 14)
                                          {
                                              var result = Math.Round(value * (decimal)Math.Pow(10, targetScale), targetScale);
                                              return new AvroDecimal(new System.Numerics.BigInteger(result), targetScale);
                                          }
                                      
                                          public virtual object Get(int fieldPos)
                                          {
                                              switch (fieldPos)
                                              {
                                                  case 0: return this.Name;
                                                  case 1: return this.List;
                                                  case 2: return this.Dictionary;
                                                  case 3: return this.ModelClass;
                                      
                                                  default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
                                              }
                                          }
                                      
                                          public virtual void Put(int fieldPos, object fieldValue)
                                          {
                                              switch (fieldPos)
                                              {
                                                  case 0: this.Name = (string?)fieldValue; break;
                                                  case 1: this.List = (System.Collections.Generic.List<string?>?)fieldValue; break;
                                                  case 2: this.Dictionary = (System.Collections.Generic.Dictionary<string, Avroify.Sample.Model?>?)fieldValue; break;
                                                  case 3: this.ModelClass = (Avroify.Sample.Model?)fieldValue; break;
                                      
                                                  default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
                                              }
                                          }
                                      }

                                      """
            }
        ]
    ];

    public IEnumerator<object[]> GetEnumerator() => _testCases.GetEnumerator();

    IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();
}